shiny::runApp('C:/Users/lucin/Dropbox/VacationWork2020&2021/FINAL_APP_FOLDER')
0.3^2+-0.9^2+0.9^2+-0.3^2
library(dplyr)
data("Theoph")
data_melted <- melt(Theoph, id.vars = "Subject")
library(tidyverse)
? melt
data_melted <- melt(Theoph, id.vars = "Subject")
library(reshape2)
data_melted <- melt(Theoph, id.vars = "Subject")
group_summaries <- data_melted %>%
group_by(Subject, variable) %>%
summarise(mean = round(mean(value, na.rm = T),2))%>%
data.frame()
View(group_summaries)
setwd("C:/Users/lucin/OneDrive/Desktop/GitHub/CSIRO_Vacation_Project/Synthetic_app")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/lucin/OneDrive/Desktop/GitHub/CSIRO_Vacation_Project/Synthetic_app")
library(shiny)
library(plotly)
ui <- fluidPage(
tags$h2("This is my 3D plot."),
plotlyOutput("Plot3d", width = "1000px", height = "1000px")
)
server <- function(input, output, session){
output$Plot3d <- renderPlotly ({
#Defining data frame for scatter
df_scatter <- data.frame(X_VAL = rnorm(50, mean = 0.5, sd = 0.15),
Y_VAL = rnorm(50, mean = 0.5, sd = 0.15),
Z_VAL = rnorm(50, mean = 0.5, sd = 0.15),
SCATTER_COL = rep("unselected", 50))
#Every point inside of the cube is labeled "selected"
for (i in 1:nrow(df_scatter)){
if (df_scatter$X_VAL[i] < 0.5 && df_scatter$Y_VAL[i] < 0.5 && df_scatter$Z_VAL[i]< 0.5) {
df_scatter$SCATTER_COL[i] <- "selected"
}
}
df_scatter$SCATTER_COL <- factor(df_scatter$SCATTER_COL, levels = c("selected", "unselected"))
#Defining data frame for mesh
df_mesh <- data.frame(X_VAL = c(0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5),
Y_VAL = c(0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0),
Z_VAL = c(0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5),
MESH_COL = factor(rep("CUBE", 8), levels = c("CUBE")))
plot_ly()%>%
add_markers(type = "scatter3d",
mode = "markers",
data = df_scatter,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
color = ~SCATTER_COL,
colors = c('red', 'grey')) %>%
#Here the trouble starts
add_trace(type = 'mesh3d',
data = df_mesh,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
i = c(7, 0, 0, 0, 4, 4, 6, 1, 4, 0, 3, 6),
j = c(3, 4, 1, 2, 5, 6, 5, 2, 0, 1, 6, 3),
k = c(0, 7, 2, 3, 6, 7, 1, 6, 5, 5, 7, 2),
color = ~MESH_COL,
colors = c("blue"),
inherit = FALSE,
opacity = 0.1
)
})
}
shinyApp(ui = ui, server=server)
load("simulated_data.RData")
load("simulated_data.RData")
simulated.data$SCATTER_COL <- rep("unselected",300)
View(simulated.data)
simulated.data$SCATTER_COL <- rep("unselected",300)
for (i in 1:nrow(simulated.data)){
if (simulated.data$CSF.AB42[i] < 656 && simulated.data$CSF.pTau[i] > 59 && simulated.data$CSF.tTau[i]>303 && simulated.data$Burnham_class == AD){
simulated.data$SCATTER_COL[i] <- "selected"
}
}
for (i in 1:nrow(simulated.data)){
if (simulated.data$CSF.AB42[i] < 656 && simulated.data$CSF.pTau[i] > 59 && simulated.data$CSF.tTau[i]>303 && simulated.data$Burnham_class == 'AD'){
simulated.data$SCATTER_COL[i] <- "selected"
}
}
View(simulated.data)
filter(simulated.data, SCATTER_COL == "selected")
q <-filter(simulated.data, SCATTER_COL == "selected")
load("simulated_data.RData")
simulated.data$SCATTER_COL <- rep("unselected",300)
for (i in 1:nrow(simulated.data)){
if (simulated.data$CSF.AB42[i] < 656 && simulated.data$CSF.pTau[i] > 59 && simulated.data$CSF.tTau[i]>303 && simulated.data$Burnham_class[i] == 'AD'){
simulated.data$SCATTER_COL[i] <- "selected"
}
}
q <-filter(simulated.data, SCATTER_COL == "selected")
View(q)
